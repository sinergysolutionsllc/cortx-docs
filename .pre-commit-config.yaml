# Pre-commit hooks for CORTX Platform
# Install with: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python code formatting with black
- repo: https://github.com/psf/black
  rev: 24.8.0
  hooks:
  - id: black
    name: Format Python code with black
    language_version: python3.11
    files: ^services/.*/app/.*\.py$|^services/.*/tests/.*\.py$
    args: [--line-length=100]

  # Python linting with ruff
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.5.6
  hooks:
  - id: ruff
    name: Lint Python code with ruff
    files: ^services/.*/app/.*\.py$|^services/.*/tests/.*\.py$
    args:
    - --fix
    - --exit-non-zero-on-fix

  # Python type checking with mypy
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.11.2
  hooks:
  - id: mypy
    name: Type check with mypy
    files: ^services/.*/app/.*\.py$
    additional_dependencies:
    - types-requests
    - types-PyYAML
    args:
    - --ignore-missing-imports
    - --no-strict-optional

  # General file checks
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.6.0
  hooks:
  - id: trailing-whitespace
    name: Remove trailing whitespace
    exclude: ^(.*\.md|.*\.txt)$

  - id: end-of-file-fixer
    name: Ensure files end with newline

  - id: check-yaml
    name: Check YAML syntax
    args: [--safe]
    exclude: ^mkdocs\.yml$

  - id: check-json
    name: Check JSON syntax

  - id: check-toml
    name: Check TOML syntax

  - id: check-added-large-files
    name: Check for large files
    args: [--maxkb=1000]

  - id: check-merge-conflict
    name: Check for merge conflicts

  - id: check-case-conflict
    name: Check for case conflicts

  - id: mixed-line-ending
    name: Check for mixed line endings
    args: [--fix=lf]

  - id: detect-private-key
    name: Detect private keys

  # Python security checks with bandit
- repo: https://github.com/PyCQA/bandit
  rev: 1.7.9
  hooks:
  - id: bandit
    name: Security check with bandit
    files: ^services/.*/app/.*\.py$
    args:
    - -ll        # Only report high and medium severity
    - -i        # Show issue details
    exclude: ^services/.*/tests/.*\.py$

  # Python import sorting with isort
- repo: https://github.com/pycqa/isort
  rev: 5.13.2
  hooks:
  - id: isort
    name: Sort Python imports
    files: ^services/.*/app/.*\.py$|^services/.*/tests/.*\.py$
    args:
    - --profile=black
    - --line-length=100

  # Markdown linting
- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.41.0
  hooks:
  - id: markdownlint
    name: Lint Markdown files
    args: [--fix]

  # YAML formatting
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.14.0
  hooks:
  - id: pretty-format-yaml
    name: Format YAML files
    args:
    - --autofix
    - --indent=2
    exclude: ^(mkdocs\.yml|.*openapi\.yaml)$

  # Dockerfile linting
- repo: https://github.com/hadolint/hadolint
  rev: v2.12.0
  hooks:
  - id: hadolint-docker
    name: Lint Dockerfiles
    files: ^services/.*/Dockerfile$

# Configuration for specific hooks
default_language_version:
  python: python3.11

# Exclude patterns
exclude: |
  (?x)^(
    .*\.egg-info/.*|
    .*\.pyc|
    .*/__pycache__/.*|
    .*/\.pytest_cache/.*|
    .*/htmlcov/.*|
    .*/\.coverage|
    .*/\.mypy_cache/.*|
    .*/\.ruff_cache/.*|
    node_modules/.*|
    .*\.min\.js|
    .*\.min\.css
  )$

# CI settings
ci:
  autofix_commit_msg: 'style: auto-fix pre-commit hooks'
  autofix_prs: true
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  autoupdate_schedule: monthly
